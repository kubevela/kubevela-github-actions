<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="da5c426a-4d24-4523-816b-a52a2900358a" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/.name" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/LICENSE" beforeDir="false" afterPath="$PROJECT_DIR$/LICENSE" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/__mocks__/@actions/github.ts" beforeDir="false" afterPath="$PROJECT_DIR$/__mocks__/@actions/github.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/testbed.js" beforeDir="false" afterPath="$PROJECT_DIR$/api/testbed.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/testbed.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/testbed.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/commands/Commands.test.ts" beforeDir="false" afterPath="$PROJECT_DIR$/commands/Commands.test.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/commands/action.yml" beforeDir="false" afterPath="$PROJECT_DIR$/commands/action.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/git.js" beforeDir="false" afterPath="$PROJECT_DIR$/common/git.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/git.ts" beforeDir="false" afterPath="$PROJECT_DIR$/common/git.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/github-release/action.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/github-release/index.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/github-release/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/metrics-collector/action.yml" beforeDir="false" afterPath="$PROJECT_DIR$/metrics-collector/action.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/update-changelog/ReleaseNotesBuilder.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/update-changelog/ReleaseNotesBuilder.test.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/update-changelog/ReleaseNotesBuilder.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/update-changelog/__snapshots__/ReleaseNotesBuilder.test.ts.snap" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/update-changelog/action.yml" beforeDir="false" afterPath="$PROJECT_DIR$/update-changelog/action.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/yarn.lock" beforeDir="false" afterPath="$PROJECT_DIR$/yarn.lock" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="KubernetesApiPersistence">
    <option name="context" value="kind-kind" />
    <option name="namespace" value="default" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedIndex" value="1" />
  </component>
  <component name="ProjectId" id="1u2FFFASfUr4UTEoabLJNy8uMW8" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="nodejs.jest.jest_package" value="$PROJECT_DIR$/node_modules/jest" />
    <property name="nodejs_package_manager_path" value="yarn" />
    <property name="settings.editor.selected.configurable" value="project.propVCSSupport.Mappings" />
    <property name="ts.external.directory.path" value="$APPLICATION_HOME_DIR$/plugins/JavaScriptLanguage/jsLanguageServicesImpl/external" />
  </component>
  <component name="RunManager">
    <configuration name="Commands" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/commands/Commands.test.ts" />
      <test-names>
        <test-name value="Commands" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.Commands" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <ignored-roots>
      <path value="$PROJECT_DIR$" />
    </ignored-roots>
  </component>
</project>